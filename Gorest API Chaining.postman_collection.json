{
	"info": {
		"_postman_id": "7a02ef9b-54e2-48ec-b1c1-6cda7a09da34",
		"name": "Gorest API Chaining",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16847351"
	},
	"item": [
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"check status code\",()=>{\r",
							"pm.expect(pm.response.to.have.status(201));\r",
							"});\r",
							"\r",
							"\r",
							"const jsonData=pm.response.json()\r",
							"pm.environment.set(\"user_id\",jsonData.id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var random=Math.random().toString(32).substring(3);\r",
							"\r",
							"var useremail=\"jim\"+random+\"@gmail.com\";\r",
							"var username=\"jim\"+random;\r",
							"\r",
							"pm.environment.set(\"user_email\",useremail);\r",
							"pm.environment.set(\"user_name\",username);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\r\n        \"name\": \"{{user_name}}\",\r\n        \"email\": \"{{user_email}}\",\r\n        \"gender\": \"female\",\r\n        \"status\": \"inactive\"\r\n    }\r\n\r\n    ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users"
					]
				},
				"description": "The endpoint makes an HTTP POST request to create a new user at the specified URL. The request body should contain the user's name, gender, email, and status. The name and email are expected to be provided as variables ({{username}} and {{useremail}}).\n\n### Response\n\nThe response to the request is in JSON format with a status code of 401. The response body includes a \"message\" field, which is expected to contain a message related to the unauthorized access. Below is the JSON schema representing the response:\n\n``` json\n{\n    \"type\": \"object\",\n    \"properties\": {\n        \"message\": {\n            \"type\": \"string\"\n        }\n    }\n}\n\n ```"
			},
			"response": []
		},
		{
			"name": "Get User details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code\",()=> {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.test(\"comparing id, name and  email\",()=> {",
							"    console.log(pm.environment.get(\"user_id\"));",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"user_id\"));",
							"    pm.expect(jsonData.name).to.eql(pm.environment.get(\"user_name\"));",
							"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"user_email\"));",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users/{{user_id}}",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"status code\",()=>{\r",
							"pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							"pm.environment.unset(\"user_email\");\r",
							"pm.environment.unset(\"user_name\");\r",
							"pm.environment.unset(\"user_id\");\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://gorest.co.in/public/v2/users/{{user_id}}",
					"protocol": "https",
					"host": [
						"gorest",
						"co",
						"in"
					],
					"path": [
						"public",
						"v2",
						"users",
						"{{user_id}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eafe4001bf6b683f652f117217908c323c2d3f40ca4226aeaf5a077193c68f71",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "identity1",
			"value": ""
		},
		{
			"key": "user_id",
			"value": ""
		}
	]
}